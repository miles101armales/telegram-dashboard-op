import { Injectable, Logger } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { Telegraf, Scenes, session } from 'telegraf';
import { Command } from './classes/command.class';
import { Scene } from './classes/scene.class';
import { MyContext } from './interfaces/context.interface';
import { StartCommand } from './commands/start.command';
import { LeaderboardCommand } from './commands/leaderboard.command';
import { InjectRepository } from '@nestjs/typeorm';
import { Manager } from 'src/managers/entities/manager.entity';
import { Repository } from 'typeorm';
import { TelegramApi } from './entities/telegram_api.entity';
import { AuthCommand } from './commands/authorization.command';
import { MySalesCommand } from './commands/my-sales.command';
import { CongratulationCommand } from './commands/congratulation.command';
import { AppealCommand } from './commands/appeal.command';
import { GetcourseApi } from 'src/getcourse_api/entities/getcourse_api.entity';
import { Sales } from 'src/sales_plan/entities/sales.entity';
import { BlankScene } from './scenes/blank.scene';

@Injectable()
export class TelegramApiService {
  public readonly client: Telegraf<MyContext>;
  private commands: Command[] = [];
  private scenes: Scene[] = [];
  private scenesNames: Scenes.WizardScene<MyContext>[] = [];
  public updatedTime: string;
  public managerName: string;

  private readonly logger = new Logger(TelegramApiService.name);

  constructor(
    private readonly configService: ConfigService,
    @InjectRepository(Manager)
    private readonly managersRepository: Repository<Manager>,
    @InjectRepository(TelegramApi)
    private readonly telegramRepository: Repository<TelegramApi>,
    @InjectRepository(GetcourseApi)
    private readonly exportsRepository: Repository<GetcourseApi>,
    @InjectRepository(Sales)
    private readonly salesRepository: Repository<Sales>,
  ) {
    this.client = new Telegraf<MyContext>(
      this.configService.get('TELEGRAM_API_KEY'),
    );
  }
  async onApplicationBootstrap() {
    try {
      this.commands = [
        new StartCommand(
          this.client,
          this.telegramRepository,
          this.managersRepository,
        ),
        new LeaderboardCommand(
          this.client,
          this.managersRepository,
          this.telegramRepository,
          this.exportsRepository,
        ),
        new AuthCommand(
          this.client,
          this.managersRepository,
          this.telegramRepository,
        ),
        new MySalesCommand(
          this.client,
          this.managersRepository,
          this.telegramRepository,
          this.salesRepository,
        ),
        new CongratulationCommand(
          this.client,
          this.configService,
          this.managersRepository,
          this.telegramRepository,
        ),
      ];
      for (const command of this.commands) {
        command.handle();
      }

      this.scenes = [
        new AppealCommand(this.client),
        new BlankScene(this.client),
      ];
      for (const scene of this.scenes) {
        scene.handle();
        this.scenesNames.push(scene.scene);
      }
      const stage = new Scenes.Stage(this.scenesNames);
      this.client.use(session());
      this.client.use(stage.middleware());
      this.client.hears('–ù–∞–ø–∏—Å–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ', (ctx) =>
        ctx.scene.enter('appeal'),
      );
      this.client.hears('–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∞–Ω–∫–µ—Ç—É', (ctx) => {
        ctx.scene.enter('blank');
      });

      this.client.launch();
      this.logger.log('Telegram Bot initialized');
      const clients = await this.telegramRepository.find();
      for (const _client of clients) {
        if (_client.manager && _client.authorization === false) {
          this.client.telegram.sendMessage(
            _client.chat_id,
            '–í—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /auth',
          );
        }
//         this.client.telegram.sendMessage(
//           _client.chat_id,
//           `
// <b>–£–≤–∞–∂–∞–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂!</b>üåü

// –•–æ—á—É –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –∫–∞–∂–¥–æ–≥–æ –∏–∑ –≤–∞—Å –∑–∞ <b>—É–ø–æ—Ä–Ω—ã–π —Ç—Ä—É–¥ –∏ –≤–∫–ª–∞–¥ –≤ —Ä–∞–±–æ—Ç—É –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏</b> –≤ –ø—Ä–æ—à–µ–¥—à–µ–º –º–µ—Å—è—Ü–µ. –ë–ª–∞–≥–æ–¥–∞—Ä—è –≤–∞—à–∏–º —É—Å–∏–ª–∏—è–º, –º—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –∑–Ω–∞—á–∏–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–¥–æ–ª–µ–ª–∏ –º–Ω–æ–≥–∏–µ –≤—ã–∑–æ–≤—ã. üí™ –•–æ—Ç—è –Ω–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç—å –ø–ª–∞–Ω –Ω–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü, –≤—ã –≤–ª–æ–∂–∏–ª–∏ –º–Ω–æ–≥–æ —Ç—Ä—É–¥–∞ –∏ —Å—Ç–∞—Ä–∞–Ω–∏—è  –≤ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, –∏ —ç—Ç–æ –¥–æ—Å—Ç–æ–π–Ω–æ —É–≤–∞–∂–µ–Ω–∏—è. üôå

// –ú—ã –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–ª–∏ –±–æ–ª—å—à–æ–π —à–∞–≥ –≤–ø–µ—Ä–µ–¥, –∏ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ! üèÜ –í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ <b>–ª—é–±–æ–π –æ–ø—ã—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–º—É —É—Å–ø–µ—Ö—É, ‚Äî —ç—Ç–æ —à–∞–≥ –∫ –Ω–∞—à–∏–º –±—É–¥—É—â–∏–º –ø–æ–±–µ–¥–∞–º</b>. –£—á–∏—Ç–µ—Å—å –Ω–∞ —Å–≤–æ–∏—Ö –æ—à–∏–±–∫–∞—Ö, –∏—â–∏—Ç–µ –Ω–æ–≤—ã–µ –ø–æ–¥—Ö–æ–¥—ã, —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ –Ω–æ–≤—ã–º –≤–µ—Ä—à–∏–Ω–∞–º. –í—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è —É–º–µ–µ—Ç –¥–æ–±–∏–≤–∞—Ç—å—Å—è —Å–≤–æ–µ–≥–æ, –∏ —è –≤–µ—Ä—é, —á—Ç–æ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü —Å—Ç–∞–Ω–µ—Ç –¥–ª—è –Ω–∞—Å –µ—â–µ –±–æ–ª–µ–µ —É—Å–ø–µ—à–Ω—ã–º! üéØ

// –î–∞–≤–∞–π—Ç–µ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏–º—Å—è –Ω–∞ —É–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ –Ω–∞—à–∏—Ö –ø–æ–∑–∏—Ü–∏–π, —É—Å–∏–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ –¥—É—Ö–∞ –∏, –∫–æ–Ω–µ—á–Ω–æ, –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –Ω–∞—à–∏—Ö —Ü–µ–ª–µ–π. –í–ø–µ—Ä–µ–¥–∏ –Ω–æ–≤—ã–π –º–µ—Å—è—Ü, –∏ —è —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –≤–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º –¥–æ–±–∏—Ç—å—Å—è –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á! üîù

// –°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –≤–∞—à—É —Ä–∞–±–æ—Ç—É –∏ —ç–Ω—Ç—É–∑–∏–∞–∑–º. –ü—É—Å—Ç—å –Ω–æ–≤—ã–π –º–µ—Å—è—Ü –ø—Ä–∏–Ω–µ—Å–µ—Ç –Ω–∞–º –≤—Å–µ–º —É—Å–ø–µ—Ö –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ –æ—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã—Ö —Ü–µ–ª–µ–π! ‚ú®

// <b>–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂ –∑–∞ –∞–≤–≥—É—Å—Ç:</b>

// –ü—Ä–æ–¥—É–∫—Ç—ã —Å –Ω–∞–∏–±–æ–ª—å—à–µ–π –ø—Ä–∏–±—ã–ª—å—é:

// 	1.	–ú–∏–ª–ª–∏–æ–Ω –Ω–∞ –¥—Ä–æ–ø–∞—Ö - –î–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É (–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –Ω–∞ 240 –¥–Ω–µ–π) ‚Äî <b>5,389,452‚ÇΩ</b>
// 	2.	–ì–æ–¥–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ ‚Äú–î–µ–Ω—å–≥–∏ –ø–æ–¥ –∫–ª—é—á‚Äù (—Å—Ç–∞—Ä—Ç 19 –∞–≤–≥—É—Å—Ç–∞) (–≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É) ‚Äî <b>3,154,330.5‚ÇΩ</b>
// 	3.	–ú–∏–ª–ª–∏–æ–Ω –Ω–∞ –¥—Ä–æ–ø–∞—Ö —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π (—Å—Ç–∞—Ä—Ç 16 —Å–µ–Ω—Ç—è–±—Ä—è) (–≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É) ‚Äî <b>2,422,112‚ÇΩ</b>

// –î–Ω–∏ —Å –Ω–∞–∏–±–æ–ª—å—à–µ–π –ø—Ä–∏–±—ã–ª—å—é:

// 	1.	22 –∞–≤–≥—É—Å—Ç–∞ ‚Äî <b>1,728,156 ‚ÇΩ</b>
// 	2.	29 –∞–≤–≥—É—Å—Ç–∞ ‚Äî <b>1,581,611 ‚ÇΩ</b>
// 	3.	20 –∞–≤–≥—É—Å—Ç–∞ ‚Äî <b>1,477,268 ‚ÇΩ</b>
//           `,
//           {
//             parse_mode: 'HTML',
//             reply_markup: {
//               inline_keyboard: [
//                 [{ text: 'üëç', callback_data: 'like_analize' }],
//               ],
//             },
//           },
//         );
      }

      this.client.action('like_analize', (ctx) => {
        ctx.telegram.sendMessage(
          1810423951,
          `@${ctx.from.username} –æ—Ü–µ–Ω–∏–ª –∞–Ω–∞–ª–∏–∑`,
        );
        ctx.editMessageReplyMarkup({ inline_keyboard: [] });
      });
    } catch (error) {}
  }

  async sendUpdate(managerName: string, profit: string) {
    this.managerName = managerName;
    const clients = await this.telegramRepository.find();
    for (const _client of clients) {
      this.client.telegram.sendMessage(
        _client.chat_id,
        `üéâ<b>${managerName}</b> –∑–∞–∫—Ä—ã–ª(–∞) –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —Å—É–º–º—É <b>${profit}</b>`,
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: '–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å‚ù§Ô∏è', callback_data: 'cb_congratulation' }],
            ],
          },
          parse_mode: 'HTML',
        },
      );
    }
  }
}
